name: Deploy to ECS

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
  ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
  ECS_TASK_FAMILY: ${{ secrets.ECS_TASK_FAMILY }}
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}

jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to ECR
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
        docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update ECS service with new image
      run: |
        IMAGE_TAG=${{ github.sha }}
        ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}
        ECR_URI=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
        CONTAINER_NAME=${{ env.CONTAINER_NAME }}
        ECS_CLUSTER=${{ env.ECS_CLUSTER }}
        ECS_SERVICE=${{ env.ECS_SERVICE }}
        ECS_TASK_FAMILY=${{ env.ECS_TASK_FAMILY }}

        echo "Using image: $ECR_URI"
        echo "Updating task family: $ECS_TASK_FAMILY"

        TASK_DEF=$(aws ecs describe-task-definition --task-definition $ECS_TASK_FAMILY)

        NEW_TASK_DEF=$(echo "$TASK_DEF" | jq --arg IMAGE "$ECR_URI" --arg NAME "$CONTAINER_NAME" \
          '.taskDefinition | {
            family: .family,
            executionRoleArn: .executionRoleArn,
            taskRoleArn: .taskRoleArn,
            networkMode: .networkMode,
            containerDefinitions: (.containerDefinitions | map(if .name == $NAME then .image = $IMAGE | . else . end)),
            requiresCompatibilities: .requiresCompatibilities,
            cpu: .cpu,
            memory: .memory,
            volumes: .volumes
          }')

        echo "$NEW_TASK_DEF" > new-task-def.json

        REVISION=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json | jq -r '.taskDefinition.revision')

        echo "Registered new revision: $REVISION"

        aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --task-definition $ECS_TASK_FAMILY:$REVISION
